[{"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/index.js":"1","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/App.js":"2","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/redux/reducers/firebaseReducers.js":"3","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/Home.js":"4","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/LoginLogic.js":"5","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/ResetPassword.js":"6","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignUp.js":"7","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignIn.js":"8","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/utils/utils.js":"9","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HeaderComponents/Header.js":"10"},{"size":2882,"mtime":1608614801707,"results":"11","hashOfConfig":"12"},{"size":1416,"mtime":1608611048970,"results":"13","hashOfConfig":"12"},{"size":262,"mtime":1608583478143,"results":"14","hashOfConfig":"12"},{"size":956,"mtime":1608613235310,"results":"15","hashOfConfig":"12"},{"size":3754,"mtime":1608612007678,"results":"16","hashOfConfig":"12"},{"size":3321,"mtime":1608599649722,"results":"17","hashOfConfig":"12"},{"size":7169,"mtime":1608595686437,"results":"18","hashOfConfig":"12"},{"size":4965,"mtime":1608611196792,"results":"19","hashOfConfig":"12"},{"size":388,"mtime":1608595753228,"results":"20","hashOfConfig":"12"},{"size":1137,"mtime":1608610932235,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1oxghi9",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/index.js",["45","46"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/App.js",[],["47","48"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/redux/reducers/firebaseReducers.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/Home.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/LoginLogic.js",["49","50","51"],"import { Box, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState, useReducer } from 'react';\nimport ResetPassword from './ResetPassword';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport logo from '../../assets/logo-cosmo-market.svg'\nimport { actionTypes, websiteAddress } from '../../utils/utils';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  loginLogo: {\n    margin: theme.spacing(3, 0),\n    width: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  alert: {\n    margin: theme.spacing(0, 1, 2),\n  },\n}));\n\nconst titles = {\n  login: 'Conectează-te',\n  resetPassword: 'Recuperare parolă',\n  signUp: 'Creează cont',\n}\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.login:\n      return { login: true, resetPassword: false, signUp: false, title: titles.login }\n    case actionTypes.resetPassword:\n      return { login: false, resetPassword: true, signUp: false, title: titles.resetPassword }\n    case actionTypes.signUp:\n      return { login: false, resetPassword: false, signUp: true, title: titles.signUp }\n    default:\n      console.log(`Unhandled type: ${action.type}`)\n  }\n}\n\nfunction useLogin({ reducer = loginReducer } = {}) {\n  const [{ login, resetPassword, signUp, title }, dispatch] = useReducer(reducer, { login: true, resetPassword: false, signUp: false, title: titles.login })\n\n  const loginAction = () => dispatch({ type: actionTypes.login })\n  const resetPasswordAction = () => dispatch({ type: actionTypes.resetPassword })\n  const signUpAction = () => dispatch({ type: actionTypes.signUp })\n  const dispatchAction = (actionType) => dispatch({ type: actionType })\n\n  return { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction }\n}\n\n\nexport default function LoginLogic() {\n  const classes = useStyles();\n  const { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction } = useLogin()\n\n  const [alert, setAlert] = useState({\n    message: '',\n    severity: 'error'\n  })\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href={websiteAddress}>\n          {websiteAddress}\n        </Link>\n        {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container direction='column' justify='center' spacing={2}>\n        <Grid item className={classes.loginLogo}>\n          <img src={logo} alt='logo' />\n        </Grid>\n        <Grid item>\n          <Typography variant='h4' align='center' component='div'>\n            <Box fontWeight='fontWeightBold'>\n              {title}\n            </Box>\n          </Typography>\n        </Grid>\n        {\n          alert.message && <Grid item>\n            <Alert variant=\"filled\" severity={alert.severity} className={classes.alert}>\n              {alert.message}\n            </Alert>\n          </Grid>\n        }\n        {login && <Grid item><SignIn setAlert={setAlert} dispatchAction={dispatchAction} isCreateAccountDisabled={true} /></Grid>}\n        {resetPassword && <Grid item><ResetPassword setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        {signUp && <Grid item><SignUp setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        <Grid item>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/ResetPassword.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignUp.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignIn.js",["52"],"import { Button, Container, Grid, Link, makeStyles, TextField } from '@material-ui/core';\nimport React, { useState } from 'react'\nimport { useFirebase } from \"react-redux-firebase\";\nimport { actionTypes, timeout } from '../../utils/utils';\nimport GoogleButton from 'react-google-button'\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport { firebaseFunctions } from '../..';\n\n\nexport const useStyles = makeStyles((theme) => ({\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n        // marginBottom: theme.spacing(),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 3),\n    },\n}));\n\n\nexport default function SignIn({ setAlert, dispatchAction, isCreateAccountDisabled = false }) {\n    const classes = useStyles();\n    const firebase = useFirebase();\n    const history = useHistory()\n    const functions = firebaseFunctions\n\n    const [form, setForm] = useState({})\n    const [loading, setLoading] = useState(false)\n\n    const onChangeForField = fieldName => ({ target }) => setForm(state => ({ ...state, [fieldName]: target.value }));\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setLoading(true)\n            await firebase.login({\n                email: form.email.trim(),\n                password: form.password.trim()\n            })\n            functions.httpsCallable('adminFunctions-addAdmin')({ email: form.email.trim() })\n            setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n            timeout(500)\n                .then(() => {\n                    history.push('/acasa')\n                })\n        } catch (error) {\n            setAlert({ severity: 'error', message: error.message })\n        }\n        setLoading(false)\n    }\n\n    async function handleGoogleSignIn() {\n        firebase.login({\n            provider: 'google',\n            type: 'popup',\n        })\n            .then(resp => {\n                console.log(resp)\n                setAlert({ severity: 'success', message: 'Te-ai conectat cu succes.' })\n            })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <Grid container direction='column' justify='space-between' alignItems='center'>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChangeForField('email')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Parolă\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={onChangeForField('password')}\n                        />\n                    </Grid>\n                    <Grid item style={{ width: '100%' }}>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Intră în cont\n                </Button>\n                    </Grid>\n                    <Grid item>\n                        <GoogleButton\n                            onClick={handleGoogleSignIn}\n                            style={{ marginBottom: 16 }}\n                        />\n                    </Grid>\n                </Grid>\n            </form>\n            <Grid container justify='flex-end'>\n                <Grid item>\n                    <Link variant=\"body2\" color='error' href='#' onClick={() => { dispatchAction(actionTypes.resetPassword); setAlert({}) }}>\n                        Ai uitat parola?\n                        </Link>\n                </Grid>\n                {!isCreateAccountDisabled && <Grid item>\n                    <Link variant=\"body2\" color='primary' onClick={() => { dispatchAction(actionTypes.signUp); setAlert({}) }}>\n                        Nu ai cont? Fă-ți unul acum\n                        </Link>\n                </Grid>}\n            </Grid>\n\n        </Container>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/utils/utils.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HeaderComponents/Header.js",[],{"ruleId":"53","severity":1,"message":"54","line":14,"column":26,"nodeType":"55","messageId":"56","endLine":14,"endColumn":36},{"ruleId":"53","severity":1,"message":"57","line":72,"column":7,"nodeType":"55","messageId":"56","endLine":72,"endColumn":13},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"53","severity":1,"message":"62","line":63,"column":48,"nodeType":"55","messageId":"56","endLine":63,"endColumn":59},{"ruleId":"53","severity":1,"message":"63","line":63,"column":61,"nodeType":"55","messageId":"56","endLine":63,"endColumn":80},{"ruleId":"53","severity":1,"message":"64","line":63,"column":82,"nodeType":"55","messageId":"56","endLine":63,"endColumn":94},{"ruleId":"53","severity":1,"message":"65","line":6,"column":10,"nodeType":"55","messageId":"56","endLine":6,"endColumn":18},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'styles' is assigned a value but never used.","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"'loginAction' is assigned a value but never used.","'resetPasswordAction' is assigned a value but never used.","'signUpAction' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]