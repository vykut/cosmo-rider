[{"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/index.js":"1","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/contexts/DialogContext.js":"2","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/App.js":"3","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/redux/reducers/firebaseReducers.js":"4","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/utils/utils.js":"5","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersLogic.js":"6","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/ProductPage.js":"7","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/LoginLogic.js":"8","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/Home.js":"9","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrderDetails.js":"10","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersView.js":"11","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HeaderComponents/Header.js":"12","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/AccountComponents/AccountOverview.js":"13","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/AccountComponents/PersonalData.js":"14","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersContainer.js":"15","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/TitleGrid.js":"16","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignUp.js":"17","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignIn.js":"18","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/ResetPassword.js":"19"},{"size":2773,"mtime":1609032857002,"results":"20","hashOfConfig":"21"},{"size":2758,"mtime":1609017902780,"results":"22","hashOfConfig":"21"},{"size":2315,"mtime":1609026492062,"results":"23","hashOfConfig":"21"},{"size":262,"mtime":1608583478143,"results":"24","hashOfConfig":"21"},{"size":388,"mtime":1608595753228,"results":"25","hashOfConfig":"21"},{"size":4878,"mtime":1609006550119,"results":"26","hashOfConfig":"21"},{"size":3224,"mtime":1609020161636,"results":"27","hashOfConfig":"21"},{"size":3754,"mtime":1608612007678,"results":"28","hashOfConfig":"21"},{"size":128,"mtime":1609005876374,"results":"29","hashOfConfig":"21"},{"size":17282,"mtime":1609028142260,"results":"30","hashOfConfig":"21"},{"size":5501,"mtime":1609028310716,"results":"31","hashOfConfig":"21"},{"size":2616,"mtime":1609026701909,"results":"32","hashOfConfig":"21"},{"size":2293,"mtime":1609733565225,"results":"33","hashOfConfig":"21"},{"size":5933,"mtime":1609733755162,"results":"34","hashOfConfig":"21"},{"size":970,"mtime":1609016805893,"results":"35","hashOfConfig":"21"},{"size":1487,"mtime":1609008092401,"results":"36","hashOfConfig":"21"},{"size":7169,"mtime":1608595686437,"results":"37","hashOfConfig":"21"},{"size":5430,"mtime":1609733386008,"results":"38","hashOfConfig":"21"},{"size":3321,"mtime":1608599649722,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1oxghi9",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/index.js",["85"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport firebase from 'firebase/app';\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\nimport { createStore } from 'redux'\nimport { rootReducer } from './redux/reducers/firebaseReducers'\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from 'redux-firestore'\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core';\nimport { SnackbarProvider } from 'notistack';\nimport { DialogProvider } from './contexts/DialogContext';\n\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NODE_ENVREACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n})\n\nexport const firestoreDB = app.firestore()\nexport const firebaseFunctions = app.functions('europe-west1')\n\nfirebase.firestore()\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableClaims: true,\n};\n\nconst initialState = {};\nconst store = createStore(rootReducer, initialState);\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nexport var cosmoTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#23adae',\n      contrastText: '#fff'\n    },\n    secondary: {\n      main: '#f4c132'\n    },\n    error: {\n      main: '#de512b',\n      contrastText: '#fff'\n    },\n    info: {\n      main: '#894475',\n      contrastText: '#fff'\n    },\n    succes: {\n      main: '#55df99'\n    },\n  },\n})\n\nconst styles = {\n  success: {\n    backgroundColor: '#23adae',\n  },\n  error: {\n    backgroundColor: '#de512b',\n  },\n  info: {\n    backgroundColor: '#894475',\n  },\n  warning: {\n    backgroundColor: '#f4c132',\n  },\n}\n\ncosmoTheme = responsiveFontSizes(cosmoTheme)\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={cosmoTheme}>\n      <Provider store={store} >\n        <ReactReduxFirebaseProvider {...rrfProps} >\n          <SnackbarProvider maxSnack={5} >\n            <DialogProvider>\n              <CssBaseline />\n              <App />\n            </DialogProvider>\n          </SnackbarProvider>\n        </ReactReduxFirebaseProvider>\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["86","87"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/contexts/DialogContext.js",["88"],"import { Dialog, DialogContent, DialogTitle, Grid, IconButton, makeStyles, useTheme } from '@material-ui/core'\nimport React, { useContext, useState } from 'react'\nimport { timeout } from '../utils/utils'\nimport LoginLogic from '../components/LoginComponents/LoginLogic';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ProductPage from '../components/HomeComponents/ProductPage';\n\nconst useStyles = makeStyles((theme) => ({\n    closeButton: {\n        color: theme.palette.error.main\n    }\n}))\n\nconst DialogContext = React.createContext()\n\nexport function useDialog() {\n    return useContext(DialogContext)\n}\n\nexport function DialogProvider({ children }) {\n    const classes = useStyles()\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const [productDialogOpen, setProductDialogOpen] = useState(false)\n    const [productID, setProductID] = useState('')\n\n    const toggleDialog = (isOpen) => (e) => {\n        if (e.type === 'keydown' && (e.key === 'Tab' || e.key === 'Shift')) {\n            return\n        }\n        return setProductDialogOpen(isOpen)\n    }\n\n\n    const showDialog = (productID) => {\n        setProductDialogOpen(true)\n        setProductID(productID)\n    }\n\n    const hideDialog = async () => {\n        await timeout(500)\n        setProductDialogOpen(false)\n    }\n\n    const value = {\n        showDialog,\n        hideDialog,\n    }\n\n\n    function ProductDialog() {\n        return (\n            <Dialog\n                maxWidth='lg'\n                fullWidth\n                fullScreen={fullScreen}\n                open={productDialogOpen}\n                onClose={toggleDialog(false)}\n                PaperProps={{ style: { backgroundColor: '#f7ffff' } }}\n                scroll='body'\n            >\n                <DialogTitle>\n                    <Grid container justify='space-between' alignItems='center'>\n                        <Grid item>\n                            Detalii produs\n                        </Grid>\n                        <Grid item>\n                            <IconButton onClick={toggleDialog(false)} className={classes.closeButton}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Grid>\n                    </Grid>\n                </DialogTitle>\n                <DialogContent>\n                    <ProductPage productID={productID} />\n                </DialogContent>\n            </Dialog >\n        )\n    }\n\n    return (\n        <>\n            <DialogContext.Provider value={value}>\n                {children}\n                {productDialogOpen && <ProductDialog />}\n            </DialogContext.Provider>\n        </>\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/App.js",["89","90"],"import { useSelector } from \"react-redux\";\nimport { isEmpty, isLoaded } from \"react-redux-firebase\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./HomeComponents/Home\";\nimport OrdersLogic from \"./HomeComponents/OrdersLogic\";\nimport LoginLogic from \"./LoginComponents/LoginLogic\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from \"./HeaderComponents/Header\";\nimport OrderDetails from \"./HomeComponents/OrderDetails\";\nimport ProductPage from \"./HomeComponents/ProductPage\";\nimport OrdersView from \"./HomeComponents/OrdersView\";\nimport AccountOverview from \"./AccountComponents/AccountOverview\";\n\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) {\n    return <></>;\n  }\n  return children\n}\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated or if auth is not\n// yet loaded\nfunction PrivateRoute({ children, ...rest }) {\n  const auth = useSelector(state => state.firebase.auth)\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !isEmpty(auth) ? (\n          children\n        ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\n\n\nfunction App() {\n  return (\n    <>\n      <AuthIsLoaded>\n        <Router>\n          <Header />\n          <Switch>\n            {/* <PrivateRoute path='/acasa'> */}\n            {/* <Home /> */}\n            {/* <Redirect to='/comenzi' /> */}\n            {/* </PrivateRoute> */}\n            <PrivateRoute exact path='/produs/:productID'>\n              <ProductPage />\n            </PrivateRoute>\n            <PrivateRoute exact path='/comenzi/:orderID/detalii'>\n              <OrderDetails />\n            </PrivateRoute>\n            <PrivateRoute path='/comenzi'>\n              <OrdersView />\n            </PrivateRoute>\n            <PrivateRoute path='/contul-meu'>\n              <AccountOverview />\n            </PrivateRoute>\n            <Route path='/login'>\n              <LoginLogic />\n            </Route>\n            <Redirect to='/comenzi' />\n          </Switch>\n        </Router>\n      </AuthIsLoaded>\n    </>\n  );\n}\n\nexport default App;\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/redux/reducers/firebaseReducers.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/utils/utils.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersLogic.js",["91","92","93","94","95","96","97","98","99","100","101"],"import React, { useEffect, useReducer } from 'react'\nimport { useSnackbar } from 'notistack'\nimport { Box, Container, Divider, Grid, IconButton, makeStyles, Paper, Tab, Table, TableCell, TableContainer, TableHead, TableRow, Tabs, Typography } from '@material-ui/core'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport Orders from './OrdersView'\n\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(2),\n    },\n    paper: {\n        // padding: theme.spacing(2),\n        borderColor: '#e0e0e3',\n        borderWidth: '1px',\n        borderStyle: 'solid',\n\n    },\n    titleGrid: {\n        padding: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n}))\n\n\n\nconst viewTypes = {\n    ordersView: 'Comenzi',\n    orderView: 'Comandă',\n    productView: 'Produs',\n}\n\nfunction homeReducer(state, action) {\n    switch (action.type) {\n        case viewTypes.ordersView:\n            return { ordersView: true, orderView: false, productView: false, showHeader: false, title: action.type }\n        case viewTypes.orderView:\n            return { ordersView: false, orderView: true, productView: false, showHeader: false, title: action.type }\n        case viewTypes.productView:\n            return { ordersView: false, orderView: false, productView: true, showHeader: false, title: action.type }\n        default:\n            console.log(`Unhandled type: ${action.type}`)\n    }\n}\n\nfunction useHome({ reducer = homeReducer } = {}) {\n    const [{ ordersView, orderView, productView, showHeader, title }, dispatch] = useReducer(reducer, {\n        ordersView: true,\n        orderView: false,\n        productView: false,\n        showHeader: false,\n        title: viewTypes.ordersView,\n    })\n\n    const showOrdersView = () => dispatch({ type: viewTypes.ordersView })\n    const showOrderView = () => dispatch({ type: viewTypes.orderView })\n    const showProductView = () => dispatch({ type: viewTypes.productView })\n    // const dispatchAction = (actionType) => dispatch({ type: actionType })\n\n    return { ordersView, orderView, productView, title, showHeader, showOrdersView, showOrderView, showProductView }\n}\n\nexport default function OrdersLogic() {\n    const { enqueueSnackbar } = useSnackbar()\n    const classes = useStyles()\n    const { ordersView, orderView, productView, showHeader, title, showOrdersView, showOrderView, showProductView, } = useHome()\n\n    const goBack = () => {\n        if (productView) {\n            showOrdersView()\n        } else {\n            showOrderView()\n        }\n    }\n\n\n    // useEffect(() => {\n    //     timeout(1000)\n    //         .then(() => {\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'success' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'info' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'warning' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'error' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'error' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'error' })\n    //             enqueueSnackbar('Snackbarul lui dumnezeu', { variant: 'error' })\n    //         })\n    // }, [enqueueSnackbar])\n\n    function TitleGrid() {\n        return (\n            <>\n                { showHeader && <Grid container item direction='column'>\n                    <Grid container item justify='space-between' alignItems='center' className={classes.titleGrid}>\n                        <Grid item>\n                            <IconButton className={classes.backButton} onClick={goBack}>\n                                <ArrowBackIcon />\n                            </IconButton>\n                        </Grid>\n                        <Grid item>\n                            <Typography variant='h5' color='textPrimary'>\n                                <Box fontWeight='fontWeightBold'>\n                                    {title}\n                                </Box>\n                            </Typography>\n                        </Grid>\n                        {/* <Grid item>\n                    <IconButton onClick={props.onClose} className={classes.closeButton}>\n                        <CloseIcon />\n                    </IconButton>\n                </Grid> */}\n                    </Grid>\n                    <Divider />\n                </Grid>\n                }\n            </>\n        )\n    }\n\n\n\n    return (\n        <>\n            <Container maxWidth='md' className={classes.container}>\n                <Paper className={classes.paper}>\n                    <Grid container direction='column'>\n                        <TitleGrid />\n                        {ordersView && <Orders showOrder={showOrderView} />}\n                    </Grid>\n                </Paper>\n            </Container>\n\n        </>\n\n    )\n}\n","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/ProductPage.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/LoginLogic.js",["102","103","104"],"import { Box, Container, Grid, Link, makeStyles, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState, useReducer } from 'react';\nimport ResetPassword from './ResetPassword';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport logo from '../../assets/logo-cosmo-market.svg'\nimport { actionTypes, websiteAddress } from '../../utils/utils';\n\n\nexport const useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    width: '100%',\n  },\n  loginLogo: {\n    margin: theme.spacing(3, 0),\n    width: '80%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  alert: {\n    margin: theme.spacing(0, 1, 2),\n  },\n}));\n\nconst titles = {\n  login: 'Conectează-te',\n  resetPassword: 'Recuperare parolă',\n  signUp: 'Creează cont',\n}\n\nfunction loginReducer(state, action) {\n  switch (action.type) {\n    case actionTypes.login:\n      return { login: true, resetPassword: false, signUp: false, title: titles.login }\n    case actionTypes.resetPassword:\n      return { login: false, resetPassword: true, signUp: false, title: titles.resetPassword }\n    case actionTypes.signUp:\n      return { login: false, resetPassword: false, signUp: true, title: titles.signUp }\n    default:\n      console.log(`Unhandled type: ${action.type}`)\n  }\n}\n\nfunction useLogin({ reducer = loginReducer } = {}) {\n  const [{ login, resetPassword, signUp, title }, dispatch] = useReducer(reducer, { login: true, resetPassword: false, signUp: false, title: titles.login })\n\n  const loginAction = () => dispatch({ type: actionTypes.login })\n  const resetPasswordAction = () => dispatch({ type: actionTypes.resetPassword })\n  const signUpAction = () => dispatch({ type: actionTypes.signUp })\n  const dispatchAction = (actionType) => dispatch({ type: actionType })\n\n  return { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction }\n}\n\n\nexport default function LoginLogic() {\n  const classes = useStyles();\n  const { login, resetPassword, signUp, title, loginAction, resetPasswordAction, signUpAction, dispatchAction } = useLogin()\n\n  const [alert, setAlert] = useState({\n    message: '',\n    severity: 'error'\n  })\n\n  function Copyright() {\n    return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href={websiteAddress}>\n          {websiteAddress}\n        </Link>\n        {' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container direction='column' justify='center' spacing={2}>\n        <Grid item className={classes.loginLogo}>\n          <img src={logo} alt='logo' />\n        </Grid>\n        <Grid item>\n          <Typography variant='h4' align='center' component='div'>\n            <Box fontWeight='fontWeightBold'>\n              {title}\n            </Box>\n          </Typography>\n        </Grid>\n        {\n          alert.message && <Grid item>\n            <Alert variant=\"filled\" severity={alert.severity} className={classes.alert}>\n              {alert.message}\n            </Alert>\n          </Grid>\n        }\n        {login && <Grid item><SignIn setAlert={setAlert} dispatchAction={dispatchAction} isCreateAccountDisabled={true} /></Grid>}\n        {resetPassword && <Grid item><ResetPassword setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        {signUp && <Grid item><SignUp setAlert={setAlert} dispatchAction={dispatchAction} /></Grid>}\n        <Grid item>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/Home.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrderDetails.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersView.js",["105","106","107","108","109","110","111","112"],"import { Container, Grid, LinearProgress, makeStyles, Paper, Tab, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Tabs } from \"@material-ui/core\"\nimport CheckBox from \"@material-ui/core/Checkbox\"\nimport { useEffect, useState } from \"react\";\nimport { firebaseFunctions, firestoreDB } from \"../..\";\nimport TitleGrid from \"./TitleGrid\";\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport { Link } from '@material-ui/core'\nimport OrdersContainer from \"./OrdersContainer\";\n\nconst headCells = [\n    { id: 'createdAt', numeric: false, label: 'Dată' },\n    { id: 'id', numeric: false, label: 'Cod comandă' },\n    { id: 'user', numeric: false, label: 'Client' },\n    { id: 'address', numeric: false, label: 'Adresă' },\n    { id: 'quantity', numeric: true, label: 'Număr produse' },\n    { id: 'totalPrice', numeric: true, label: 'Total' },\n];\n\n\nconst tabTypes = {\n    pendingTab: 'pending',\n    assignedTab: 'assigned',\n    deliveredTab: 'delivered',\n}\n\n\nexport default function Orders() {\n    const firestore = firestoreDB\n    const functions = firebaseFunctions\n    const history = useHistory()\n    const [tab, setTab] = useState(tabTypes.pendingTab)\n    const [orders, setOrders] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    const changeTab = (e, newValue) => {\n        setTab(newValue)\n        setOrders([])\n    }\n\n    const orderClicked = (orderID) => (e) => {\n        history.push(`/comenzi/${orderID}/detalii`)\n    }\n\n    useEffect(() => {\n        setIsLoading(true)\n        functions.httpsCallable('riderFunctions-getOrders')({ state: tab })\n            .then((response) => {\n                setOrders(response.data)\n                setIsLoading(false)\n            })\n    }, [functions, tab])\n\n    function OrdersTableHead() {\n        return (\n            <TableHead>\n                <TableRow>\n                    {/* <TableCell >\n                        <CheckBox />\n                    </TableCell> */}\n                    {headCells.map((cell) => {\n                        return <TableCell\n                            key={cell.id}\n                            align={cell.numeric ? 'right' : 'left'}\n                        >\n                            {cell.label}\n                        </TableCell>\n                    })}\n                </TableRow>\n            </TableHead>\n        )\n    }\n\n    function OrdersTableRow({ order }) {\n        return (\n            <TableRow\n                key={order.id}\n                hover\n                onClick={orderClicked(order.id)}\n                href='#'\n            >\n                {/* <TableCell>\n                    <CheckBox />\n                </TableCell> */}\n                <TableCell>\n                    {new Date(order.data.createdAt._seconds * 1000).toLocaleString('ro-RO')}\n                </TableCell>\n                <TableCell>\n                    {order.id}\n                </TableCell>\n                <TableCell>\n                    {`${order.data.firstName}  ${order.data.lastName}`}\n                </TableCell>\n                <TableCell>\n                    {order.data.street}\n                </TableCell>\n                <TableCell align='right'>\n                    {order.data.quantity}\n                </TableCell>\n                <TableCell align='right'>\n                    {/* {order.data.totalPrice} */}\n                    RON {order.data.totalPrice.toFixed(2)}\n                </TableCell>\n            </TableRow>\n        )\n    }\n\n    function DeliveredOrdersTableFooter({ totalPrice }) {\n        return (\n            <TableHead>\n                <TableRow>\n                    <TableCell colSpan={4} />\n                    <TableCell >\n                        Total\n                    </TableCell>\n                    <TableCell align='right'>\n                        RON {totalPrice.toFixed(2)}\n                    </TableCell>\n                </TableRow>\n            </TableHead>\n        )\n    }\n\n    function OrdersTable() {\n        return (\n            <>\n                <Grid container item direction='column' >\n                    <Grid item>\n                        <Tabs value={tab} onChange={changeTab} variant='fullWidth' indicatorColor='primary'>\n                            <Tab value={tabTypes.pendingTab} label='În așteptare' />\n                            <Tab value={tabTypes.assignedTab} label='Preluate' />\n                            <Tab value={tabTypes.deliveredTab} label='Livrate' />\n                        </Tabs>\n                    </Grid>\n                    <Grid item>\n                        <TableContainer>\n                            <Table>\n                                <OrdersTableHead />\n                                <TableBody>\n                                    {!!orders.length && orders.map((order) => {\n                                        return <OrdersTableRow order={order} />\n                                    })}\n                                </TableBody>\n                                {tab === tabTypes.deliveredTab && !!orders.length && <DeliveredOrdersTableFooter totalPrice={orders.reduce((acc, curr) => acc + curr.data.totalPrice, 0)} />}\n                            </Table>\n                        </TableContainer>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    }\n\n    return (\n        <OrdersContainer title='Comenzi'>\n            <OrdersTable />\n            {isLoading && <LinearProgress />}\n        </OrdersContainer>\n    )\n}","/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HeaderComponents/Header.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/AccountComponents/AccountOverview.js",["113","114","115"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/AccountComponents/PersonalData.js",["116","117","118"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/OrdersContainer.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/HomeComponents/TitleGrid.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignUp.js",[],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/SignIn.js",["119","120"],"/Users/victorsocaciu/socaciu_victor/cosmoMarket/cosmo-market-rider/src/components/LoginComponents/ResetPassword.js",[],{"ruleId":"121","severity":1,"message":"122","line":73,"column":7,"nodeType":"123","messageId":"124","endLine":73,"endColumn":13},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"121","severity":1,"message":"129","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":18},{"ruleId":"121","severity":1,"message":"130","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":12},{"ruleId":"121","severity":1,"message":"131","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":19},{"ruleId":"121","severity":1,"message":"132","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":26},{"ruleId":"121","severity":1,"message":"133","line":3,"column":72,"nodeType":"123","messageId":"124","endLine":3,"endColumn":75},{"ruleId":"121","severity":1,"message":"134","line":3,"column":77,"nodeType":"123","messageId":"124","endLine":3,"endColumn":82},{"ruleId":"121","severity":1,"message":"135","line":3,"column":84,"nodeType":"123","messageId":"124","endLine":3,"endColumn":93},{"ruleId":"121","severity":1,"message":"136","line":3,"column":95,"nodeType":"123","messageId":"124","endLine":3,"endColumn":109},{"ruleId":"121","severity":1,"message":"137","line":3,"column":111,"nodeType":"123","messageId":"124","endLine":3,"endColumn":120},{"ruleId":"121","severity":1,"message":"138","line":3,"column":122,"nodeType":"123","messageId":"124","endLine":3,"endColumn":130},{"ruleId":"121","severity":1,"message":"139","line":3,"column":132,"nodeType":"123","messageId":"124","endLine":3,"endColumn":136},{"ruleId":"121","severity":1,"message":"140","line":64,"column":13,"nodeType":"123","messageId":"124","endLine":64,"endColumn":28},{"ruleId":"121","severity":1,"message":"141","line":66,"column":25,"nodeType":"123","messageId":"124","endLine":66,"endColumn":34},{"ruleId":"121","severity":1,"message":"142","line":66,"column":99,"nodeType":"123","messageId":"124","endLine":66,"endColumn":114},{"ruleId":"121","severity":1,"message":"143","line":63,"column":48,"nodeType":"123","messageId":"124","endLine":63,"endColumn":59},{"ruleId":"121","severity":1,"message":"144","line":63,"column":61,"nodeType":"123","messageId":"124","endLine":63,"endColumn":80},{"ruleId":"121","severity":1,"message":"145","line":63,"column":82,"nodeType":"123","messageId":"124","endLine":63,"endColumn":94},{"ruleId":"121","severity":1,"message":"146","line":1,"column":10,"nodeType":"123","messageId":"124","endLine":1,"endColumn":19},{"ruleId":"121","severity":1,"message":"147","line":1,"column":43,"nodeType":"123","messageId":"124","endLine":1,"endColumn":53},{"ruleId":"121","severity":1,"message":"148","line":1,"column":55,"nodeType":"123","messageId":"124","endLine":1,"endColumn":60},{"ruleId":"121","severity":1,"message":"149","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":16},{"ruleId":"121","severity":1,"message":"150","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":17},{"ruleId":"121","severity":1,"message":"151","line":6,"column":18,"nodeType":"123","messageId":"124","endLine":6,"endColumn":28},{"ruleId":"121","severity":1,"message":"152","line":7,"column":10,"nodeType":"123","messageId":"124","endLine":7,"endColumn":14},{"ruleId":"121","severity":1,"message":"153","line":28,"column":11,"nodeType":"123","messageId":"124","endLine":28,"endColumn":20},{"ruleId":"121","severity":1,"message":"154","line":1,"column":23,"nodeType":"123","messageId":"124","endLine":1,"endColumn":34},{"ruleId":"121","severity":1,"message":"148","line":1,"column":54,"nodeType":"123","messageId":"124","endLine":1,"endColumn":59},{"ruleId":"121","severity":1,"message":"155","line":2,"column":17,"nodeType":"123","messageId":"124","endLine":2,"endColumn":25},{"ruleId":"121","severity":1,"message":"154","line":1,"column":18,"nodeType":"123","messageId":"124","endLine":1,"endColumn":29},{"ruleId":"121","severity":1,"message":"156","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"157","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"158","line":6,"column":10,"nodeType":"123","messageId":"124","endLine":6,"endColumn":18},{"ruleId":"121","severity":1,"message":"159","line":8,"column":10,"nodeType":"123","messageId":"124","endLine":8,"endColumn":27},"no-unused-vars","'styles' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["160"],"no-negated-in-lhs",["161"],"'LoginLogic' is defined but never used.","'Home' is defined but never used.","'OrdersLogic' is defined but never used.","'useEffect' is defined but never used.","'Tab' is defined but never used.","'Table' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Tabs' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'orderView' is assigned a value but never used.","'showProductView' is assigned a value but never used.","'loginAction' is assigned a value but never used.","'resetPasswordAction' is assigned a value but never used.","'signUpAction' is assigned a value but never used.","'Container' is defined but never used.","'makeStyles' is defined but never used.","'Paper' is defined but never used.","'CheckBox' is defined but never used.","'TitleGrid' is defined but never used.","'RouterLink' is defined but never used.","'Link' is defined but never used.","'firestore' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'useState' is defined but never used.","'CloseIcon' is defined but never used.","'UpdateIcon' is defined but never used.","'Redirect' is defined but never used.","'firebaseFunctions' is defined but never used.","no-global-assign","no-unsafe-negation"]